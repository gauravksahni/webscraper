version: '3.8'

services:
  # PostgreSQL database
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data_webscrape:/var/lib/postgresql/data
    expose:
      - "5432"
    networks:
      - backend-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Backend API service
  backend:
    build:
      context: ./backend
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "8000"
    volumes:
      - ./backend:/app
    command: uvicorn app:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - backend-network
      - frontend-network
    restart: unless-stopped

  # Frontend React application with Nginx
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      # Change from "80:80" to "0.0.0.0:80:80" to explicitly bind to all network interfaces
      - "0.0.0.0:80:80"
    depends_on:
      - backend
    networks:
      - frontend-network
    restart: unless-stopped

networks:
  backend-network:
    driver: bridge
  frontend-network:
    driver: bridge

volumes:
  postgres_data_webscrape:
